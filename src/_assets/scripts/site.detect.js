


/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// FM - DETECT
/////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////


; (function (window, $) {

    // Scope set
    var detect = window.fm.detect = fm.detect || {};


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// FM - THEME MW
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    // Problem going on bodyclass, rw not there when script runs??

    detect.isMW = function () {
        
        if (FM.helper.hasClass(document.getElementByTagName("body"), "mw")) {
            alert('yes');
        };

    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// FM - THEME RW
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    // Problem going on bodyclass, rw not there when script runs??

   detect.isRW = function () {
       if (FM.helper.hasClass(document.getElementByTagName("body"), "rw")) {
           alert('yes');
       };
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// FM - IS IOS
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.isIOS = function () {
        return /(iPad|iPhone|iPod touch)/i.test(navigator.userAgent);
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// FM - IS ANDROID
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.isAndroid = function () {
        return /Android/i.test(navigator.userAgent);
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// HAS TOUCH SCEEN
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.hasTouchScreen = function () {
        return ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// HAS WEB SOCKET
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.hasWebSocket = function () {
        return 'WebSocket' in window;
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// GET VIDEO FORMAT SUPPORT
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.getVideoFormatSupport = function () {
        //https://github.com/Modernizr/Modernizr/blob/master/feature-detects/video.js
        var elem = document.createElement('video'),
            types = {};

        try {
            if (!!elem.canPlayType) {
                types.mp4 = elem.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, '');
                types.ogg = elem.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, '');
                types.webm = elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, '');
            }
        } catch (e) { }

        return types;
    }


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// GET ORIENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////////

    detect.getOrientation = function () {
        return (window.innerHeight > window.innerWidth) ? 'portrait' : 'landscape';
    }





})(window, jQuery);





// Render fonts TheGuardian style
/* if (fontFileFormat) {
    var fonts = document.querySelectorAll('.fmfont');

    for (var i = 0, j = fonts.length; i < j; ++i) {
        var font = fonts[i],
            nameAndCacheKey = font.getAttribute('data-cache-file-' + fontFileFormat); //.match(/fonts\/([^/]*?)\/?([^/]*)\.(woff2|woff|tff).json$/),
        //storedCachedCss = localStorage['gu.fonts.' + nameAndCacheKey[2] + '.' + nameAndCacheKey[1]];

        //console.log(nameAndCacheKey);
        // if (storedCachedCss) {
        //     font.innerHTML = JSON.parse(storedCachedCss).value;
        //     font.setAttribute('data-cache-full', 'data-cache-full');
        // }
    }
} */



